# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    env:
      ENV: ${{ secrets.DB }}
      DB: ${{ secrets.DB }}
      AUTH0_DOMAIN: ${{ secrets.AUTH0_DOMAIN }}
      AUTH0_AUDIENCE: ${{ secrets.AUTH0_AUDIENCE }}
      AUTH0_ISSUER: ${{ secrets.AUTH0_ISSUER }}
      CLIENT_ID: ${{ secrets.CLIENT_ID }}
      CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
      ALGORITHMS: ${{ secrets.ALGORITHMS }}
      CLOUDINARY_URL: ${{ secrets.CLOUDINARY_URL }}

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.11.4
      uses: actions/setup-python@v3
      with:
        python-version: "3.11.4"
    - name: Install sqlite
      run: |
        sudo apt install sqlite3
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        python app/seed_db.py
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest
